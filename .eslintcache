[{"/home/soomin/local/webrtc---React-Mediasoup/src/App.js":"1","/home/soomin/local/webrtc---React-Mediasoup/src/PAGE/video-broadcast/publish.tsx":"2","/home/soomin/local/webrtc---React-Mediasoup/src/PAGE/video-broadcast/subscribe.tsx":"3","/home/soomin/local/webrtc---React-Mediasoup/src/index.js":"4","/home/soomin/local/webrtc---React-Mediasoup/src/reportWebVitals.js":"5","/home/soomin/local/webrtc---React-Mediasoup/src/PAGE/home/index.tsx":"6","/home/soomin/local/webrtc---React-Mediasoup/src/PAGE/video-broadcast/index.tsx":"7","/home/soomin/local/webrtc---React-Mediasoup/src/PAGE/video-conference/index.tsx":"8","/home/soomin/local/webrtc---React-Mediasoup/src/PAGE/video-conference/room.tsx":"9","/home/soomin/local/webrtc---React-Mediasoup/src/CONTAINER/layout.tsx":"10","/home/soomin/local/webrtc---React-Mediasoup/src/app.config.js":"11","/home/soomin/local/WebRTC/src/index.js":"12","/home/soomin/local/WebRTC/src/App.js":"13","/home/soomin/local/WebRTC/src/reportWebVitals.js":"14","/home/soomin/local/WebRTC/src/PAGE/home/index.tsx":"15","/home/soomin/local/WebRTC/src/PAGE/video-broadcast/index.tsx":"16","/home/soomin/local/WebRTC/src/PAGE/video-conference/index.tsx":"17","/home/soomin/local/WebRTC/src/PAGE/video-broadcast/subscribe.tsx":"18","/home/soomin/local/WebRTC/src/PAGE/video-broadcast/publish.tsx":"19","/home/soomin/local/WebRTC/src/PAGE/video-conference/room.tsx":"20","/home/soomin/local/WebRTC/src/CONTAINER/layout.tsx":"21","/home/soomin/local/WebRTC/src/app.config.js":"22"},{"size":981,"mtime":1652746929896,"results":"23","hashOfConfig":"24"},{"size":9401,"mtime":1652747134356,"results":"25","hashOfConfig":"24"},{"size":12630,"mtime":1651020759646,"results":"26","hashOfConfig":"24"},{"size":613,"mtime":1651020759646,"results":"27","hashOfConfig":"24"},{"size":362,"mtime":1651020759646,"results":"28","hashOfConfig":"24"},{"size":1038,"mtime":1651020759646,"results":"29","hashOfConfig":"24"},{"size":762,"mtime":1651020759646,"results":"30","hashOfConfig":"24"},{"size":494,"mtime":1651020759646,"results":"31","hashOfConfig":"24"},{"size":30817,"mtime":1652749721308,"results":"32","hashOfConfig":"24"},{"size":414,"mtime":1651020759646,"results":"33","hashOfConfig":"24"},{"size":102,"mtime":1651020759646,"results":"34","hashOfConfig":"24"},{"size":613,"mtime":1653460187171,"results":"35","hashOfConfig":"36"},{"size":981,"mtime":1653460187161,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1653460187171,"results":"38","hashOfConfig":"36"},{"size":1038,"mtime":1653460187161,"results":"39","hashOfConfig":"36"},{"size":762,"mtime":1653460187171,"results":"40","hashOfConfig":"36"},{"size":494,"mtime":1653460187171,"results":"41","hashOfConfig":"36"},{"size":12630,"mtime":1653460187171,"results":"42","hashOfConfig":"36"},{"size":9401,"mtime":1653460187171,"results":"43","hashOfConfig":"36"},{"size":30817,"mtime":1653460187171,"results":"44","hashOfConfig":"36"},{"size":414,"mtime":1653460187161,"results":"45","hashOfConfig":"36"},{"size":102,"mtime":1653460187171,"results":"46","hashOfConfig":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},"lhryf0",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6raiba",{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/soomin/local/webrtc---React-Mediasoup/src/App.js",["99","100","101"],"import React, { Suspense } from 'react';\nimport logo from './logo.svg';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { io as socketIOClient } from 'socket.io-client';\nimport './App.css';\n\nconst Home = React.lazy(() => import('./PAGE/home/index'));\nconst Broadcast = React.lazy(() => import('./PAGE/video-broadcast/index'));\nconst Conference = React.lazy(() => import('./PAGE/video-conference/index'));\n\nfunction App() {\n    return (\n        <div className='App'>\n            <Switch>\n                <Suspense fallback={<div>Loading...</div>}>\n                    <Route path='/' exact component={Home} />\n                    <Route\n                        path='/broadcast/:view'\n                        exact\n                        component={Broadcast}\n                    />\n                    <Route path='/conference/:user' exact component={Conference} />\n                </Suspense>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n",["102","103"],"/home/soomin/local/webrtc---React-Mediasoup/src/PAGE/video-broadcast/publish.tsx",["104","105"],"import React, { Suspense, lazy } from 'react';\nimport { Device } from 'mediasoup-client';\nimport { io as socketIOClient } from 'socket.io-client';\nimport { config } from '../../app.config';\nfunction Publish(props: any) {\n  const localVideo: any = React.useRef();\n  const localStream: any = React.useRef();\n  const clientId: any = React.useRef();\n  const device: any = React.useRef();\n  const producerTransport: any = React.useRef();\n  const videoProducer: any = React.useRef();\n  const audioProducer: any = React.useRef();\n  const socketRef: any = React.useRef();\n\n  const [useVideo, setUseVideo] = React.useState(true);\n  const [useAudio, setUseAudio] = React.useState(true);\n  const [isStartMedia, setIsStartMedia] = React.useState(false);\n  const [isPublished, setIsPublished] = React.useState(false);\n\n  // ============ UI button ==========\n  const handleUseVideo = (e: any) => {\n    setUseVideo(!useVideo);\n  };\n  const handleUseAudio = (e: any) => {\n    setUseAudio(!useAudio);\n  };\n\n  const handleStartMedia = () => {\n    if (localStream.current) {\n      console.warn('WARN: local media ALREADY started');\n      return;\n    }\n\n    navigator.mediaDevices\n      .getUserMedia({ audio: useAudio, video: useVideo })\n      .then((stream: any) => {\n        localStream.current = stream;\n        playVideo(localVideo.current, localStream.current);\n        setIsStartMedia(true);\n      })\n      .catch((err) => {\n        console.error('media ERROR:', err);\n      });\n  };\n\n  function playVideo(element: any, stream: any) {\n    if (element.srcObject) {\n      console.warn('element ALREADY playing, so ignore');\n      return;\n    }\n    element.srcObject = stream;\n    element.volume = 0;\n    return element.play();\n  }\n\n  function pauseVideo(element: any) {\n    element.pause();\n    element.srcObject = null;\n  }\n\n  function stopLocalStream(stream: any) {\n    let tracks = stream.getTracks();\n    if (!tracks) {\n      console.warn('NO tracks');\n      return;\n    }\n\n    tracks.forEach((track: any) => track.stop());\n  }\n\n  function handleStopMedia() {\n    if (localStream.current) {\n      pauseVideo(localVideo.current);\n      stopLocalStream(localStream.current);\n      localStream.current = null;\n      setIsStartMedia(false);\n    }\n  }\n\n  async function handlePublish() {\n    if (!localStream.current) {\n      console.warn('WARN: local media NOT READY');\n      return;\n    }\n\n    // --- connect socket.io ---\n    if (!socketRef.current) {\n      await connectSocket().catch((err: any) => {\n        console.error(err);\n        return;\n      });\n    }\n    // --- get capabilities --\n    const data = await sendRequest('getRouterRtpCapabilities', {});\n    console.log('getRouterRtpCapabilities:', data);\n    await loadDevice(data);\n    //  }\n\n    // --- get transport info ---\n    console.log('--- createProducerTransport --');\n    const params = await sendRequest('createProducerTransport', {});\n    console.log('transport params:', params);\n    producerTransport.current = device.current.createSendTransport(params);\n    console.log('createSendTransport:', producerTransport);\n\n    // --- join & start publish --\n    producerTransport.current.on(\n      'connect',\n      async ({ dtlsParameters }: any, callback: any, errback: any) => {\n        console.log('--trasnport connect');\n        sendRequest('connectProducerTransport', {\n          dtlsParameters: dtlsParameters,\n        })\n          .then(callback)\n          .catch(errback);\n      }\n    );\n\n    producerTransport.current.on(\n      'produce',\n      async (\n        { kind, rtpParameters }: any,\n        callback: any,\n        errback: any\n      ) => {\n        console.log('--trasnport produce');\n        try {\n          const { id }: any = await sendRequest('produce', {\n            transportId: producerTransport.current.id,\n            kind,\n            rtpParameters,\n          });\n          callback({ id });\n        } catch (err) {\n          errback(err);\n        }\n      }\n    );\n\n    producerTransport.current.on('connectionstatechange', (state: any) => {\n      switch (state) {\n        case 'connecting':\n          console.log('publishing...');\n          break;\n\n        case 'connected':\n          console.log('published');\n          setIsPublished(true);\n          break;\n\n        case 'failed':\n          console.log('failed');\n          producerTransport.current.close();\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    if (useVideo) {\n      const videoTrack = localStream.current.getVideoTracks()[0];\n      if (videoTrack) {\n        const trackParams = { track: videoTrack };\n        videoProducer.current = await producerTransport.current.produce(\n          trackParams\n        );\n      }\n    }\n    if (useAudio) {\n      const audioTrack = localStream.current.getAudioTracks()[0];\n      if (audioTrack) {\n        const trackParams = { track: audioTrack };\n        audioProducer.current = await producerTransport.current.produce(\n          trackParams\n        );\n      }\n    }\n  }\n\n  function handleDisconnect() {\n    if (localStream.current) {\n      pauseVideo(localVideo.current);\n      stopLocalStream(localStream.current);\n      localStream.current = null;\n    }\n    if (videoProducer.current) {\n      videoProducer.current.close(); // localStream will stop\n      videoProducer.current = null;\n    }\n    if (audioProducer.current) {\n      audioProducer.current.close(); // localStream will stop\n      audioProducer.current = null;\n    }\n    if (producerTransport.current) {\n      producerTransport.current.close(); // localStream will stop\n      producerTransport.current = null;\n    }\n\n    disconnectSocket();\n    setIsPublished(false);\n    setIsStartMedia(false);\n  }\n\n  const loadDevice = async (routerRtpCapabilities: any) => {\n    try {\n      device.current = new Device();\n      console.log('device.current');\n      console.log(device.current);\n    } catch (error) {\n      if (error.name === 'UnsupportedError') {\n        console.error('browser not supported');\n      }\n    }\n\n    console.log('device.current start');\n    console.log(device.current);\n    console.log('device.current end');\n    await device.current.load({ routerRtpCapabilities });\n  };\n\n  function disconnectSocket() {\n    if (socketRef.current) {\n      socketRef.current.close();\n      socketRef.current = null;\n      clientId.current = null;\n      console.log('socket.io closed..');\n    }\n  }\n\n  function sendRequest(type: any, data: any) {\n    return new Promise((resolve, reject) => {\n      socketRef.current.emit(type, data, (err: any, response: any) => {\n        if (!err) {\n          // Success response, so pass the mediasoup response to the local Room.\n          resolve(response);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  }\n\n  const connectSocket: any = () => {\n    if (socketRef.current == null) {\n      const io: any = socketIOClient(\n        config.SERVER_ENDPOINT + '/video-broadcast'\n      );\n      socketRef.current = io;\n    }\n\n    return new Promise((resolve: any, reject: any) => {\n      const socket = socketRef.current;\n      socket.on('connect', function (evt: any) {\n        console.log('socket.io connected()');\n      });\n      socket.on('error', function (err: any) {\n        console.error('socket.io ERROR:', err);\n        reject(err);\n      });\n      socket.on('message', function (message: any) {\n        console.log('socket.io message:', message);\n        if (message.type === 'welcome') {\n          if (socket.id !== message.id) {\n            console.warn(\n              'WARN: something wrong with clientID',\n              socket.io,\n              message.id\n            );\n          }\n\n          clientId.current = message.id;\n          console.log(\n            'connected to server. clientId=' + clientId.current\n          );\n          resolve();\n        } else {\n          console.error('UNKNOWN message from server:', message);\n        }\n      });\n      socket.on('newProducer', async function (message: any) {\n        console.warn('IGNORE socket.io newProducer:', message);\n      });\n    });\n  };\n\n  return (\n    <div>\n      <div>\n        <input\n          disabled={isStartMedia}\n          onChange={handleUseVideo}\n          type='checkbox'\n          checked={useVideo}\n        ></input>\n        <label>video</label>\n      </div>\n      <div>\n        <input\n          disabled={isStartMedia}\n          onChange={handleUseAudio}\n          type='checkbox'\n          checked={useAudio}\n        ></input>\n        <label>audio</label>\n      </div>\n      <button disabled={isStartMedia} onClick={handleStartMedia}>\n        Start Media\n      </button>\n      <button onClick={async () => await sendRequest(\"chatInput\", { data: \"data\" })}>dfdfdfdfdfdfd</button>\n      <button\n        disabled={!isStartMedia || isPublished}\n        onClick={handleStopMedia}\n      >\n        Stop Media\n      </button>\n\n      <button\n        disabled={isPublished || !isStartMedia}\n        onClick={handlePublish}\n      >\n        publish\n      </button>\n      <button\n        disabled={!isPublished || !isStartMedia}\n        onClick={handleDisconnect}\n      >\n        Disconnect\n      </button>\n      <div>\n        local video\n        <video\n          ref={localVideo}\n          autoPlay\n          style={{\n            width: '240px',\n            height: '180px',\n            border: '1px solid black',\n          }}\n        ></video>\n      </div>\n    </div>\n  );\n}\n\nexport default Publish;\n",["106","107"],"/home/soomin/local/webrtc---React-Mediasoup/src/PAGE/video-broadcast/subscribe.tsx",["108","109","110","111","112","113"],"import React, { Suspense, lazy } from 'react';\nimport { Device } from 'mediasoup-client';\nimport { io as socketIOClient } from 'socket.io-client';\nimport { config } from '../../app.config';\nfunction Subscribe(props: any) {\n    const remoteVideo: any = React.useRef();\n    const localStream: any = React.useRef();\n    const clientId: any = React.useRef();\n    const device: any = React.useRef();\n    const consumerTransport: any = React.useRef();\n    const videoConsumer: any = React.useRef();\n    const audioConsumer: any = React.useRef();\n    const socketRef: any = React.useRef();\n\n    const [isSubscribed, setIsSubscribed] = React.useState(false);\n\n    const [isConnected, setIsConnected] = React.useState(false);\n\n    // return Promise\n    function playVideo(element: any, stream: any) {\n        if (element.srcObject) {\n            console.warn('element ALREADY playing, so ignore');\n            return;\n        }\n        element.srcObject = stream;\n        element.volume = 0;\n        remoteVideo.current = element;\n        console.log('playVideo');\n        console.log(remoteVideo);\n        return element.play();\n    }\n\n    function pauseVideo(element: any) {\n        element.pause();\n        element.srcObject = null;\n    }\n\n    function addRemoteTrack(id: any, track: any) {\n        let video: any = remoteVideo.current;\n\n        if (video.srcObject) {\n            video.srcObject.addTrack(track);\n            return;\n        }\n\n        const newStream = new MediaStream();\n        newStream.addTrack(track);\n        playVideo(video, newStream)\n            .then(() => {\n                video.volume = 1.0;\n            })\n            .catch((err: any) => {\n                console.error('media ERROR:', err);\n            });\n    }\n\n    // ============ UI button ==========\n\n    async function handleSubscribe() {\n        //if (!socketRef.current) {\n        await connectSocket().catch((err: any) => {\n            console.error(err);\n            return;\n        });\n        // }\n\n        // --- get capabilities --\n        const data = await sendRequest('getRouterRtpCapabilities', {});\n        console.log('getRouterRtpCapabilities:', data);\n        await loadDevice(data);\n        // }\n\n        // --- prepare transport ---\n        console.log('--- createConsumerTransport --');\n        const params = await sendRequest('createConsumerTransport', {});\n        console.log('transport params:', params);\n        consumerTransport.current = device.current.createRecvTransport(params);\n        console.log('createConsumerTransport:', consumerTransport);\n\n        // --- NG ---\n        //sendRequest('connectConsumerTransport', { dtlsParameters: dtlsParameters })\n        //  .then(callback)\n        //  .catch(errback);\n\n        // --- try --- not well\n        //sendRequest('connectConsumerTransport', { dtlsParameters: params.dtlsParameters })\n        //  .then(() => console.log('connectConsumerTransport OK'))\n        //  .catch(err => console.error('connectConsumerTransport ERROR:', err));\n\n        // --- join & start publish --\n        consumerTransport.current.on(\n            'connect',\n            async ({ dtlsParameters }: any, callback: any, errback: any) => {\n                console.log('--consumer trasnport connect');\n                sendRequest('connectConsumerTransport', {\n                    dtlsParameters: dtlsParameters,\n                })\n                    .then(callback)\n                    .catch(errback);\n\n                //consumer = await consumeAndResume(consumerTransport);\n            }\n        );\n\n        consumerTransport.current.on('connectionstatechange', (state: any) => {\n            switch (state) {\n                case 'connecting':\n                    console.log('subscribing...');\n                    break;\n\n                case 'connected':\n                    console.log('subscribed');\n                    setIsSubscribed(true);\n                    break;\n\n                case 'failed':\n                    console.log('failed');\n                    consumerTransport.current.close();\n                    break;\n\n                default:\n                    break;\n            }\n        });\n\n        videoConsumer.current = await consumeAndResume(\n            consumerTransport.current,\n            'video'\n        );\n        audioConsumer.current = await consumeAndResume(\n            consumerTransport.current,\n            'audio'\n        );\n    }\n\n    async function consumeAndResume(transport: any, kind: any) {\n        const consumer = await consume(transport, kind);\n        if (consumer) {\n            console.log('-- track exist, consumer ready. kind=' + kind);\n\n            if (kind === 'video') {\n                console.log('-- resume kind=' + kind);\n                sendRequest('resume', { kind: kind })\n                    .then(() => {\n                        console.log('resume OK');\n                        return consumer;\n                    })\n                    .catch((err) => {\n                        console.error('resume ERROR:', err);\n                        return consumer;\n                    });\n            } else {\n                console.log('-- do not resume kind=' + kind);\n            }\n        } else {\n            console.log('-- no consumer yet. kind=' + kind);\n            return null;\n        }\n    }\n\n    function handleDisconnect() {\n        if (videoConsumer.current) {\n            videoConsumer.current.close();\n            videoConsumer.current = null;\n        }\n        if (audioConsumer.current) {\n            audioConsumer.current.close();\n            audioConsumer.current = null;\n        }\n        if (consumerTransport.current) {\n            consumerTransport.current.close();\n            consumerTransport.current = null;\n        }\n\n        removeAllRemoteVideo();\n\n        disconnectSocket();\n        setIsSubscribed(false);\n    }\n\n    async function loadDevice(routerRtpCapabilities: any) {\n        try {\n            device.current = new Device();\n        } catch (error) {\n            if (error.name === 'UnsupportedError') {\n                console.error('browser not supported');\n            }\n        }\n        await device.current.load({ routerRtpCapabilities });\n    }\n\n    async function consume(transport: any, trackKind: any) {\n        console.log('--start of consume --kind=' + trackKind);\n        const { rtpCapabilities } = device.current;\n        //const data = await socket.request('consume', { rtpCapabilities });\n        const data = await sendRequest('consume', {\n            rtpCapabilities: rtpCapabilities,\n            kind: trackKind,\n        }).catch((err) => {\n            console.error('consume ERROR:', err);\n        });\n        const { producerId, id, kind, rtpParameters }: any = data;\n\n        if (producerId) {\n            let codecOptions = {};\n            const consumer = await transport.consume({\n                id,\n                producerId,\n                kind,\n                rtpParameters,\n                codecOptions,\n            });\n            //const stream = new MediaStream();\n            //stream.addTrack(consumer.track);\n\n            addRemoteTrack(clientId.current, consumer.track);\n\n            console.log('--end of consume');\n            //return stream;\n\n            return consumer;\n        } else {\n            console.warn('--- remote producer NOT READY');\n\n            return null;\n        }\n    }\n\n    function sendRequest(type: any, data: any) {\n        return new Promise((resolve: any, reject: any) => {\n            socketRef.current.emit(type, data, (err: any, response: any) => {\n                if (!err) {\n                    // Success response, so pass the mediasoup response to the local Room.\n                    resolve(response);\n                } else {\n                    reject(err);\n                }\n            });\n        });\n    }\n    function disconnectSocket() {\n        if (socketRef.current) {\n            socketRef.current.close();\n            socketRef.current = null;\n            clientId.current = null;\n            console.log('socket.io closed..');\n        }\n    }\n\n    const connectSocket: any = () => {\n        if (socketRef.current == null) {\n            const io: any = socketIOClient(\n                config.SERVER_ENDPOINT + '/video-broadcast'\n            );\n            socketRef.current = io;\n        }\n\n        return new Promise((resolve: any, reject: any) => {\n            const socket = socketRef.current;\n            socket.on('connect', function (evt: any) {\n                console.log('socket.io connected()');\n            });\n            socket.on('error', function (err: any) {\n                console.error('socket.io ERROR:', err);\n                reject(err);\n            });\n            socket.on('message', function (message: any) {\n                console.log('socket.io message:', message);\n                if (message.type === 'welcome') {\n                    if (socket.id !== message.id) {\n                        console.warn(\n                            'WARN: something wrong with clientID',\n                            socket.io,\n                            message.id\n                        );\n                    }\n\n                    clientId.current = message.id;\n                    console.log(\n                        'connected to server. clientId=' + clientId.current\n                    );\n                    resolve();\n                } else {\n                    console.error('UNKNOWN message from server:', message);\n                }\n            });\n            socket.on('newProducer', async function (message: any) {\n                console.log('socket.io newProducer:', message);\n                if (consumerTransport.current) {\n                    // start consume\n                    if (message.kind === 'video') {\n                        videoConsumer.current = await consumeAndResume(\n                            consumerTransport.current,\n                            message.kind\n                        );\n                    } else if (message.kind === 'audio') {\n                        audioConsumer.current = await consumeAndResume(\n                            consumerTransport.current,\n                            message.kind\n                        );\n                    }\n                }\n            });\n\n            socket.on('producerClosed', function (message: any) {\n                console.log('socket.io producerClosed:', message);\n                const localId = message.localId;\n                const remoteId = message.remoteId;\n                const kind = message.kind;\n                console.log(\n                    '--try removeConsumer remoteId=' +\n                        remoteId +\n                        ', localId=' +\n                        localId +\n                        ', kind=' +\n                        kind\n                );\n                if (kind === 'video') {\n                    if (videoConsumer.current) {\n                        videoConsumer.current.close();\n                        videoConsumer.current = null;\n                    }\n                } else if (kind === 'audio') {\n                    if (audioConsumer.current) {\n                        audioConsumer.current.close();\n                        audioConsumer.current = null;\n                    }\n                }\n\n                if (remoteId) {\n                    removeRemoteVideo(remoteId);\n                } else {\n                    removeAllRemoteVideo();\n                }\n            });\n        });\n    };\n\n    function removeRemoteVideo(id: any) {\n        console.log(' ---- removeRemoteVideo() id=' + id);\n    }\n\n    function removeAllRemoteVideo() {\n        // remoteVideo.current = null;\n        if (remoteVideo.current) {\n            remoteVideo.current.pause();\n            remoteVideo.current.srcObject = null;\n        }\n    }\n\n    return (\n        <div>\n            <button disabled={isSubscribed} onClick={handleSubscribe}>\n                Subscribe\n            </button>\n            <button disabled={!isSubscribed} onClick={handleDisconnect}>\n                Disconnect\n            </button>\n\n            <div>\n                remote video\n                <br />\n                <div>\n                    <video\n                        ref={remoteVideo}\n                        autoPlay\n                        style={{\n                            width: '240px',\n                            height: '180px',\n                            border: '1px solid black',\n                        }}\n                    ></video>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Subscribe;\n","/home/soomin/local/webrtc---React-Mediasoup/src/index.js",[],"/home/soomin/local/webrtc---React-Mediasoup/src/reportWebVitals.js",[],"/home/soomin/local/webrtc---React-Mediasoup/src/PAGE/home/index.tsx",[],"/home/soomin/local/webrtc---React-Mediasoup/src/PAGE/video-broadcast/index.tsx",["114","115"],"import Layout from '../../CONTAINER/layout';\nimport Subscribe from './subscribe';\nimport Publish from './publish';\nimport { io as socketIOClient } from 'socket.io-client';\nimport { config } from '../../app.config';\n\n// const userSocket: any = socketIOClient(\n//     config.SERVER_ENDPOINT + '/video-broadcast'\n// );\n\nfunction Home(props: any) {\n    const view = props.match.params.view;\n    return (\n        <Layout>\n            {view === 'publish' ? (\n                <Publish\n                //  userSocket={userSocket}\n                />\n            ) : null}\n            {view === 'subscribe' ? (\n                <Subscribe\n                //  userSocket={userSocket}\n                />\n            ) : null}\n        </Layout>\n    );\n}\n\nexport default Home;\n","/home/soomin/local/webrtc---React-Mediasoup/src/PAGE/video-conference/index.tsx",["116","117","118"],"import Layout from '../../CONTAINER/layout';\n\nimport MeetRoom from './room';\nimport { io as socketIOClient } from 'socket.io-client';\nimport { config } from '../../app.config';\n\n// const socketIO: any = socketIOClient(\n//     config.SERVER_ENDPOINT + '/video-conference'\n// );\n\nfunction Home(props: any) {\n    const view = props.match.params.view;\n    return (\n        <Layout>\n            <MeetRoom\n            //  io={socketIO}\n            />\n        </Layout>\n    );\n}\n\nexport default Home;\n","/home/soomin/local/webrtc---React-Mediasoup/src/PAGE/video-conference/room.tsx",["119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134"],"/home/soomin/local/webrtc---React-Mediasoup/src/CONTAINER/layout.tsx",["135","136","137"],"import React, { useRef } from 'react';\nimport { io as socketIOClient } from 'socket.io-client';\nimport { isPropertySignature } from 'typescript';\nimport { config } from '../app.config';\n\nfunction Layout(props: any) {\n    React.useEffect(() => {\n        const userSocket: any = socketIOClient(config.SERVER_ENDPOINT);\n    }, []);\n    return <div className='Layout'>{props.children}</div>;\n}\n\nexport default Layout;\n","/home/soomin/local/webrtc---React-Mediasoup/src/app.config.js",[],"/home/soomin/local/WebRTC/src/index.js",[],"/home/soomin/local/WebRTC/src/App.js",["138","139","140"],"/home/soomin/local/WebRTC/src/reportWebVitals.js",[],"/home/soomin/local/WebRTC/src/PAGE/home/index.tsx",[],"/home/soomin/local/WebRTC/src/PAGE/video-broadcast/index.tsx",["141","142"],"/home/soomin/local/WebRTC/src/PAGE/video-conference/index.tsx",["143","144","145"],"/home/soomin/local/WebRTC/src/PAGE/video-broadcast/subscribe.tsx",["146","147","148","149","150","151"],"/home/soomin/local/WebRTC/src/PAGE/video-broadcast/publish.tsx",["152","153"],"/home/soomin/local/WebRTC/src/PAGE/video-conference/room.tsx",["154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169"],"/home/soomin/local/WebRTC/src/CONTAINER/layout.tsx",["170","171","172"],"/home/soomin/local/WebRTC/src/app.config.js",[],{"ruleId":"173","severity":1,"message":"174","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":12},{"ruleId":"173","severity":1,"message":"177","line":3,"column":25,"nodeType":"175","messageId":"176","endLine":3,"endColumn":33},{"ruleId":"173","severity":1,"message":"178","line":4,"column":16,"nodeType":"175","messageId":"176","endLine":4,"endColumn":30},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"185","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":31},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"185","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":31},{"ruleId":"183","severity":1,"message":"186","line":7,"column":11,"nodeType":"175","messageId":"176","endLine":7,"endColumn":27},{"ruleId":"183","severity":1,"message":"187","line":17,"column":12,"nodeType":"175","messageId":"176","endLine":17,"endColumn":23},{"ruleId":"183","severity":1,"message":"188","line":17,"column":25,"nodeType":"175","messageId":"176","endLine":17,"endColumn":39},{"ruleId":"183","severity":1,"message":"189","line":33,"column":14,"nodeType":"175","messageId":"176","endLine":33,"endColumn":24},{"ruleId":"183","severity":1,"message":"178","line":4,"column":16,"nodeType":"175","messageId":"176","endLine":4,"endColumn":30},{"ruleId":"183","severity":1,"message":"190","line":5,"column":10,"nodeType":"175","messageId":"176","endLine":5,"endColumn":16},{"ruleId":"183","severity":1,"message":"178","line":4,"column":16,"nodeType":"175","messageId":"176","endLine":4,"endColumn":30},{"ruleId":"183","severity":1,"message":"190","line":5,"column":10,"nodeType":"175","messageId":"176","endLine":5,"endColumn":16},{"ruleId":"183","severity":1,"message":"191","line":12,"column":11,"nodeType":"175","messageId":"176","endLine":12,"endColumn":15},{"ruleId":"183","severity":1,"message":"184","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"185","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":31},{"ruleId":"192","severity":1,"message":"193","line":29,"column":6,"nodeType":"194","endLine":29,"endColumn":8,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":272,"column":5,"nodeType":"198","messageId":"199","endLine":278,"endColumn":6},{"ruleId":"196","severity":1,"message":"197","line":279,"column":5,"nodeType":"198","messageId":"199","endLine":285,"endColumn":6},{"ruleId":"200","severity":1,"message":"201","line":369,"column":37,"nodeType":"202","messageId":"203","endLine":369,"endColumn":39},{"ruleId":"200","severity":1,"message":"201","line":373,"column":43,"nodeType":"202","messageId":"203","endLine":373,"endColumn":45},{"ruleId":"183","severity":1,"message":"204","line":386,"column":13,"nodeType":"175","messageId":"176","endLine":386,"endColumn":26},{"ruleId":"183","severity":1,"message":"205","line":413,"column":12,"nodeType":"175","messageId":"176","endLine":413,"endColumn":26},{"ruleId":"200","severity":1,"message":"201","line":442,"column":14,"nodeType":"202","messageId":"203","endLine":442,"endColumn":16},{"ruleId":"183","severity":1,"message":"206","line":799,"column":9,"nodeType":"175","messageId":"176","endLine":799,"endColumn":22},{"ruleId":"200","severity":1,"message":"201","line":825,"column":14,"nodeType":"202","messageId":"203","endLine":825,"endColumn":16},{"ruleId":"200","severity":1,"message":"201","line":829,"column":16,"nodeType":"202","messageId":"203","endLine":829,"endColumn":18},{"ruleId":"200","severity":1,"message":"201","line":840,"column":16,"nodeType":"202","messageId":"203","endLine":840,"endColumn":18},{"ruleId":"200","severity":1,"message":"201","line":870,"column":38,"nodeType":"202","messageId":"203","endLine":870,"endColumn":40},{"ruleId":"200","severity":1,"message":"201","line":879,"column":38,"nodeType":"202","messageId":"203","endLine":879,"endColumn":40},{"ruleId":"183","severity":1,"message":"207","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":23},{"ruleId":"183","severity":1,"message":"208","line":3,"column":10,"nodeType":"175","messageId":"176","endLine":3,"endColumn":29},{"ruleId":"183","severity":1,"message":"209","line":8,"column":15,"nodeType":"175","messageId":"176","endLine":8,"endColumn":30},{"ruleId":"173","severity":1,"message":"174","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":12},{"ruleId":"173","severity":1,"message":"177","line":3,"column":25,"nodeType":"175","messageId":"176","endLine":3,"endColumn":33},{"ruleId":"173","severity":1,"message":"178","line":4,"column":16,"nodeType":"175","messageId":"176","endLine":4,"endColumn":30},{"ruleId":"183","severity":1,"message":"178","line":4,"column":16,"nodeType":"175","messageId":"176","endLine":4,"endColumn":30},{"ruleId":"183","severity":1,"message":"190","line":5,"column":10,"nodeType":"175","messageId":"176","endLine":5,"endColumn":16},{"ruleId":"183","severity":1,"message":"178","line":4,"column":16,"nodeType":"175","messageId":"176","endLine":4,"endColumn":30},{"ruleId":"183","severity":1,"message":"190","line":5,"column":10,"nodeType":"175","messageId":"176","endLine":5,"endColumn":16},{"ruleId":"183","severity":1,"message":"191","line":12,"column":11,"nodeType":"175","messageId":"176","endLine":12,"endColumn":15},{"ruleId":"183","severity":1,"message":"184","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"185","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":31},{"ruleId":"183","severity":1,"message":"186","line":7,"column":11,"nodeType":"175","messageId":"176","endLine":7,"endColumn":27},{"ruleId":"183","severity":1,"message":"187","line":17,"column":12,"nodeType":"175","messageId":"176","endLine":17,"endColumn":23},{"ruleId":"183","severity":1,"message":"188","line":17,"column":25,"nodeType":"175","messageId":"176","endLine":17,"endColumn":39},{"ruleId":"183","severity":1,"message":"189","line":33,"column":14,"nodeType":"175","messageId":"176","endLine":33,"endColumn":24},{"ruleId":"183","severity":1,"message":"184","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"185","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":31},{"ruleId":"183","severity":1,"message":"184","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"185","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":31},{"ruleId":"192","severity":1,"message":"193","line":29,"column":6,"nodeType":"194","endLine":29,"endColumn":8,"suggestions":"210"},{"ruleId":"196","severity":1,"message":"197","line":272,"column":5,"nodeType":"198","messageId":"199","endLine":278,"endColumn":6},{"ruleId":"196","severity":1,"message":"197","line":279,"column":5,"nodeType":"198","messageId":"199","endLine":285,"endColumn":6},{"ruleId":"200","severity":1,"message":"201","line":369,"column":37,"nodeType":"202","messageId":"203","endLine":369,"endColumn":39},{"ruleId":"200","severity":1,"message":"201","line":373,"column":43,"nodeType":"202","messageId":"203","endLine":373,"endColumn":45},{"ruleId":"183","severity":1,"message":"204","line":386,"column":13,"nodeType":"175","messageId":"176","endLine":386,"endColumn":26},{"ruleId":"183","severity":1,"message":"205","line":413,"column":12,"nodeType":"175","messageId":"176","endLine":413,"endColumn":26},{"ruleId":"200","severity":1,"message":"201","line":442,"column":14,"nodeType":"202","messageId":"203","endLine":442,"endColumn":16},{"ruleId":"183","severity":1,"message":"206","line":799,"column":9,"nodeType":"175","messageId":"176","endLine":799,"endColumn":22},{"ruleId":"200","severity":1,"message":"201","line":825,"column":14,"nodeType":"202","messageId":"203","endLine":825,"endColumn":16},{"ruleId":"200","severity":1,"message":"201","line":829,"column":16,"nodeType":"202","messageId":"203","endLine":829,"endColumn":18},{"ruleId":"200","severity":1,"message":"201","line":840,"column":16,"nodeType":"202","messageId":"203","endLine":840,"endColumn":18},{"ruleId":"200","severity":1,"message":"201","line":870,"column":38,"nodeType":"202","messageId":"203","endLine":870,"endColumn":40},{"ruleId":"200","severity":1,"message":"201","line":879,"column":38,"nodeType":"202","messageId":"203","endLine":879,"endColumn":40},{"ruleId":"183","severity":1,"message":"207","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":23},{"ruleId":"183","severity":1,"message":"208","line":3,"column":10,"nodeType":"175","messageId":"176","endLine":3,"endColumn":29},{"ruleId":"183","severity":1,"message":"209","line":8,"column":15,"nodeType":"175","messageId":"176","endLine":8,"endColumn":30},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'socketIOClient' is defined but never used.","no-native-reassign",["211"],"no-negated-in-lhs",["212"],"@typescript-eslint/no-unused-vars","'Suspense' is defined but never used.","'lazy' is defined but never used.","'localStream' is assigned a value but never used.","'isConnected' is assigned a value but never used.","'setIsConnected' is assigned a value but never used.","'pauseVideo' is defined but never used.","'config' is defined but never used.","'view' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["213"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'newPeers' is assigned a value but never used.","'addRemoteVideo' is defined but never used.","'audioIdsCount' is assigned a value but never used.","'useRef' is defined but never used.","'isPropertySignature' is defined but never used.","'userSocket' is assigned a value but never used.",["214"],"no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},{"desc":"215","fix":"217"},"Update the dependencies array to be: [props]",{"range":"218","text":"219"},{"range":"220","text":"219"},[942,944],"[props]",[942,944]]